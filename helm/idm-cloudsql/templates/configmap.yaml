apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
data:
  PROJECT_HOME: "{{ .Values.global.configPath.idm }}"
  GIT_AUTOSAVE_BRANCH:  autosave-idm
  GIT_CHECKOUT_BRANCH: {{ default "master" .Values.global.git.branch }}
  GIT_REPO: "{{ .Values.global.git.repo }}"
  GIT_ROOT:  "/git"
  GIT_PROJECT_DIRECTORY: {{ default "forgeops-init" .Values.global.git.projectDirectory }}


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: idm-boot-properties
data:
   boot.properties: |
      openidm.repo.host={{.Values.openidm.repo.host}}
      openidm.repo.port={{.Values.openidm.repo.port}}
      openidm.repo.user={{.Values.openidm.repo.user}}
      openidm.repo.password={{.Values.openidm.repo.password}}
      openidm.repo.databaseName={{.Values.openidm.repo.databaseName}}
      openidm.repo.schema={{.Values.openidm.repo.schema}}


      # Use a variable for our ldap host & password
      userstore.host={{.Values.userstore.host}}
      userstore.password={{.Values.userstore.password}}
      userstore.port={{default "1389" .Values.userstore.port}}


      openidm.port.http=8080
      openidm.port.https=8443
      openidm.port.mutualauth=8444
      openidm.auth.clientauthonlyports=8444
      openidm.https.keystore.cert.alias=openidm-localhost

      openidm.keystore.type=JCEKS
      openidm.truststore.type=JKS
      openidm.keystore.provider=SunJCE
      openidm.truststore.provider=SUN
      openidm.keystore.location=security/keystore.jceks
      openidm.truststore.location=security/truststore

      # Keystore password, adjust to match your keystore and protect this file
      openidm.keystore.password=changeit
      openidm.truststore.password=changeit

      # Optionally use the crypto bundle to obfuscate the password and set one of these:
      #openidm.keystore.password=OBF:
      #openidm.keystore.password=CRYPT:

      # PKCS#11 configuration file
      #openidm.security.pkcs11.config=

      openidm.servlet.alias=/openidm

      # key in keystore to handle config encryption
      openidm.config.crypto.alias=openidm-sym-default
      #openidm.script.javascript.debug=transport=socket,suspend=y,address=9888,trace=true
      #openidm.script.javascript.sources=/Eclipse/workspace/External JavaScript Source/

      # key in keystore to handle selfservice sharedkey
      openidm.config.crypto.selfservice.sharedkey.alias=openidm-selfservice-key

      # key in keystore to handle jwtsession hmac signing key
      openidm.config.crypto.jwtsession.hmackey.alias=openidm-jwtsessionhmac-key

      # optionally map a hostname to a specific client key alias
      openidm.ssl.host.aliases=localhost=

      # policy enforcement enable/disable
      openidm.policy.enforcement.enabled=true

      # node id if clustered; each node in a cluster must have a unique node id
      openidm.node.id=node1

      # enables the execution of persistent schedulers
      openidm.scheduler.execute.persistent.schedules=true

      # enables the statistics MBean for BoneCP. Enabling this will have a performance impact on BoneCP.
      openidm.bonecp.statistics.enabled=false

      # determines whether javascript exceptions will include debug information - e.g. file name, line number
      javascript.exception.debug.info=false

      # determines the TLS version used by the http client in the external rest service to connect to TLS-protected resources
      # valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2
      # defaults to TLSv1.2 if not specified
      #openidm.external.rest.tls.version=TLSv1.1

      # Indicates whether the IDM deployment is automated by a cluster management tool such as Kubernetes, which
      # deploys containers in Pods whose identities are transient. Pod shutdown will mean that the corresponding cluster
      # node identity will never re-appear in the cluster, and thus IDM's record of this cluster node should be deleted
      # upon cluster node shutdown or failure. Defaults to false if not specified.
      openidm.cluster.remove.offline.node.state=true

      # enables API Descriptor generation, which if set to 'false', renders the API Explorer non-functional
      openidm.apidescriptor.enabled=true